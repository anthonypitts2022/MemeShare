type Query {
  getAllPosts: [Post]
  postLikeCount(postId: String!): String
  postDislikeCount(postId: String!): String
}

type Mutation {
  createPost(input: createPostInput): Post
  createLike(input: createLikeInput): Like
  createComment(input: createCommentInput): Comment
  deleteAllComments(isActual: Boolean!): Boolean
}


#===============================================================================
# Post
#===============================================================================

type Post {
  id: ID!
  userId: String!
  caption: String
  likeCount: String
  dislikeCount: String
  comments: [Comment]
  errors: Error
  success: Success
  bulkAddReport: [BulkAddReport]
}

type Like {
  id: ID!
  userId: String!
  postId: String!
  isLike: Boolean!
  errors: Error
  success: Success
  bulkAddReport: [BulkAddReport]
}

type Comment {
  id: ID!
  userId: String!
  userName: String!
  postId: String!
  text: String!
  errors: Error
  success: Success
  bulkAddReport: [BulkAddReport]
}

#===============================================================================
# Inputs
#===============================================================================

input createPostInput{
  caption: String
}

input createLikeInput{
  isLike: Boolean!
  postId: String!
}

input createCommentInput{
  text: String!
  postId: String!
}

#===============================================================================
# Messages
#===============================================================================

type Error {
  msg: String
}

type Success {
  msg: String
}

type BulkAddReport {
  msg: String
  val: String
}
