{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/anthony/github/MemeShare/app/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anthony/github/MemeShare/app/client/src/queries-mutations/CurrentUserPosts.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n      {\\n        userPosts{\\n          id\\n          caption\\n          userId\\n          likeCount\\n          dislikeCount\\n          comments{\\n            text\\n            userId\\n            postId\\n            id\\n            userName\\n          }\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport PostBox from '../components/postBox.jsx';\n\nconst Posts = () => React.createElement(Query, {\n  query: gql(_templateObject()),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Error :(\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, data.getAllPosts.map(postInfo => React.createElement(\"div\", {\n    key: postInfo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(PostBox, {\n    postInfo: postInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))));\n});\n\nexport default Posts;","map":{"version":3,"sources":["/home/anthony/github/MemeShare/app/client/src/queries-mutations/CurrentUserPosts.js"],"names":["React","Query","gql","PostBox","Posts","loading","error","data","getAllPosts","map","postInfo","id"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AAGA,MAAMC,KAAK,GAAG,MACZ,oBAAC,KAAD;AACE,EAAA,KAAK,EAAEF,GAAF,mBADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAoBG,CAAC;AAAEG,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,KAA8B;AAC7B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACC,WAAL,CAAiBC,GAAjB,CAAqBC,QAAQ,IAC5B;AAAK,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAED,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,CADH,CADF;AAUD,CAjCH,CADF;;AAqCA,eAAeN,KAAf","sourcesContent":["import React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport PostBox from '../components/postBox.jsx';\n\n\nconst Posts = () => (\n  <Query\n    query={gql`\n      {\n        userPosts{\n          id\n          caption\n          userId\n          likeCount\n          dislikeCount\n          comments{\n            text\n            userId\n            postId\n            id\n            userName\n          }\n        }\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <p>Loading...</p>;\n      if (error) return <p>Error :(</p>;\n      return(\n        <div>\n          {data.getAllPosts.map(postInfo => (\n            <div key={postInfo.id}>\n              <PostBox postInfo={postInfo}/>\n              <p></p>\n            </div>\n          ))}\n        </div>\n      );\n    }}\n  </Query>\n);\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}