{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/anthony/github/MemeShare/app/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anthony/github/MemeShare/app/client/src/queries-mutations/CheckLogin.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n      query checkLogin($input: LoginInput){\\n        checkLogin(input: $input)\\n      }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst CheckLogin = () => React.createElement(Query, {\n  query: gql(_templateObject()),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Error :(\");\n\n  if (data.checkLogin == true) {\n    return React.createElement(\"p\", {\n      key: \"loginSuccess\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Login Successful!\");\n  } else {\n    return React.createElement(\"p\", {\n      key: \"loginFailed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Invalid Login.\");\n  }\n});\n\nexport default CheckLogin;","map":{"version":3,"sources":["/home/anthony/github/MemeShare/app/client/src/queries-mutations/CheckLogin.js"],"names":["React","Query","Mutation","gql","CheckLogin","loading","error","data","checkLogin"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAGA,MAAMC,UAAU,GAAG,MACjB,oBAAC,KAAD;AACE,EAAA,KAAK,EAAED,GAAF,mBADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAOG,CAAC;AAAEE,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,KAA8B;AAC7B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;;AAEX,MAAGC,IAAI,CAACC,UAAL,IAAiB,IAApB,EAAyB;AACvB,WACE;AAAG,MAAA,GAAG,EAAC,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF;AAGD,GAJD,MAKI;AACF,WACE;AAAG,MAAA,GAAG,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAGD;AACF,CArBH,CADF;;AAyBA,eAAeJ,UAAf","sourcesContent":["import React from 'react';\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\n\nconst CheckLogin = () => (\n  <Query\n    query={gql`\n      query checkLogin($input: LoginInput){\n        checkLogin(input: $input)\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <p>Loading...</p>;\n      if (error) return <p>Error :(</p>;\n\n      if(data.checkLogin==true){\n        return(\n          <p key=\"loginSuccess\">Login Successful!</p>\n        );\n      }\n      else{\n        return(\n          <p key=\"loginFailed\">Invalid Login.</p>\n        )\n      }\n    }}\n  </Query>\n);\nexport default CheckLogin;\n"]},"metadata":{},"sourceType":"module"}