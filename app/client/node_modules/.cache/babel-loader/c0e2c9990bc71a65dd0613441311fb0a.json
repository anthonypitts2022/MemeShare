{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/anthony/github/MemeShare/app/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anthony/github/MemeShare/app/client/src/queries-mutations/CreateUser.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n      mutation createUser($input: CreateUserInput){\\n        User: createUser(input: $input){\\n          errors{\\n            msg\\n          }\\n          id\\n          name\\n          email\\n          password\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst CreateUser = () => React.createElement(Mutation, {\n  mutation: gql(_templateObject()),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Error :(\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, data.getAllPosts.map(postInfo => React.createElement(\"div\", {\n    key: postInfo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(PostBox, {\n    postInfo: postInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))));\n});\n\nexport default CreateUser;","map":{"version":3,"sources":["/home/anthony/github/MemeShare/app/client/src/queries-mutations/CreateUser.js"],"names":["React","Query","Mutation","gql","CreateUser","loading","error","data","getAllPosts","map","postInfo","id"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAGA,MAAMC,UAAU,GAAG,MACjB,oBAAC,QAAD;AACE,EAAA,QAAQ,EAAED,GAAF,mBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAeG,CAAC;AAAEE,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,KAA8B;AAC7B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACC,WAAL,CAAiBC,GAAjB,CAAqBC,QAAQ,IAC5B;AAAK,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAED,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,CADH,CADF;AAUD,CA5BH,CADF;;AAgCA,eAAeN,UAAf","sourcesContent":["import React from 'react';\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\n\nconst CreateUser = () => (\n  <Mutation\n    mutation={gql`\n      mutation createUser($input: CreateUserInput){\n        User: createUser(input: $input){\n          errors{\n            msg\n          }\n          id\n          name\n          email\n          password\n        }\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <p>Loading...</p>;\n      if (error) return <p>Error :(</p>;\n      return(\n        <div>\n          {data.getAllPosts.map(postInfo => (\n            <div key={postInfo.id}>\n              <PostBox postInfo={postInfo}/>\n              <p></p>\n            </div>\n          ))}\n        </div>\n      );\n    }}\n  </Mutation>\n);\nexport default CreateUser;\n"]},"metadata":{},"sourceType":"module"}