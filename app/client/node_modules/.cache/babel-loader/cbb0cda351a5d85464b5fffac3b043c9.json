{"ast":null,"code":"var _jsxFileName = \"/home/anthony/github/MemeShare/app/client/src/components/postBox.jsx\";\nimport React, { Component } from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport AddLike from '../queries-mutations/AddLike.js';\nimport AddComment from '../queries-mutations/AddComment.js';\n\nclass PostBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      likeCount: typeof props.postInfo.likeCount === 'undefined' ? 0 : props.postInfo.likeCount,\n      dislikeCount: typeof props.postInfo.dislikeCount === 'undefined' ? 0 : props.postInfo.dislikeCount,\n      caption: typeof props.postInfo.caption === 'undefined' ? \"\" : props.postInfo.caption,\n      postId: typeof props.postInfo.id === 'undefined' ? \"\" : props.postInfo.id,\n      comments: typeof props.postInfo.comments === 'undefined' ? [] : props.postInfo.comments,\n      addCommentText: ''\n    };\n    this.handleAddCommentChange = this.handleAddCommentChange.bind(this);\n  }\n\n  handleAddCommentChange(event) {\n    this.setState({\n      addCommentText: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"card-img-top\",\n      src: \"https://tinyurl.com/yxl6uy3s\",\n      width: \"200\",\n      height: \"200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Mutation, {\n      mutation: AddLike,\n      variables: {\n        \"input\": {\n          \"isLike\": true,\n          \"postId\": this.state.postId\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, addLike => React.createElement(\"button\", {\n      onClick: addLike,\n      className: \"badge badge-pill badge-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Like\")), React.createElement(\"span\", {\n      className: \"badge badge-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.likeCount), React.createElement(Mutation, {\n      mutation: AddLike,\n      variables: {\n        \"input\": {\n          \"isLike\": false,\n          \"postId\": this.state.postId\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, addLike => React.createElement(\"button\", {\n      onClick: addLike,\n      className: \"badge badge-pill badge-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Dislike\")), React.createElement(\"span\", {\n      className: \"badge badge-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.dislikeCount), React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.caption), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.comments.map(comment => React.createElement(\"div\", {\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, comment.userName + \": \", comment.text), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })))), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"InputComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"Comment\",\n      className: \"form-control\",\n      onChange: this.handleAddCommentChange,\n      id: \"commentInput\",\n      \"aria-describedby\": \"CommentHelp\",\n      placeholder: \"Enter Comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(Mutation, {\n      mutation: AddComment,\n      variables: {\n        \"input\": {\n          \"text\": this.state.addCommentText,\n          \"postId\": this.state.postId\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, addComment => React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: addComment,\n      className: \"badge badge-pill badge-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Add Comment\")))))));\n  }\n\n}\n\nexport default PostBox;","map":{"version":3,"sources":["/home/anthony/github/MemeShare/app/client/src/components/postBox.jsx"],"names":["React","Component","Query","Mutation","gql","AddLike","AddComment","PostBox","constructor","props","state","likeCount","postInfo","dislikeCount","caption","postId","id","comments","addCommentText","handleAddCommentChange","bind","event","setState","target","value","render","addLike","map","comment","userName","text","addComment"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport AddLike from '../queries-mutations/AddLike.js';\nimport AddComment from '../queries-mutations/AddComment.js';\n\n\n\nclass PostBox extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      likeCount: (typeof props.postInfo.likeCount === 'undefined') ? 0: props.postInfo.likeCount,\n      dislikeCount: (typeof props.postInfo.dislikeCount === 'undefined') ? 0: props.postInfo.dislikeCount,\n      caption: (typeof props.postInfo.caption === 'undefined') ? \"\" : props.postInfo.caption,\n      postId: (typeof props.postInfo.id === 'undefined') ? \"\" : props.postInfo.id,\n      comments: (typeof props.postInfo.comments === 'undefined') ? [] : props.postInfo.comments,\n      addCommentText: ''\n    };\n\n    this.handleAddCommentChange = this.handleAddCommentChange.bind(this);\n  }\n\n  handleAddCommentChange(event) {\n    this.setState({addCommentText: event.target.value});\n  }\n\n  render(){\n    return(\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3\">\n          <div className=\"card\">\n            <img className=\"card-img-top\" src=\"https://tinyurl.com/yxl6uy3s\" width=\"200\" height=\"200\"></img>\n            <div className=\"card-body\">\n              <Mutation mutation={AddLike} variables={{\"input\": { \"isLike\":true, \"postId\": this.state.postId } }}>\n                {addLike => <button onClick={addLike} className=\"badge badge-pill badge-primary\">Like</button>}\n              </Mutation>\n              <span className=\"badge badge-success\">{this.state.likeCount}</span>\n\n              <Mutation mutation={AddLike} variables={{\"input\": { \"isLike\":false, \"postId\": this.state.postId } }}>\n                {addLike => <button onClick={addLike} className=\"badge badge-pill badge-danger\">Dislike</button>}\n              </Mutation>\n              <span className=\"badge badge-success\">{this.state.dislikeCount}</span>\n\n\n              <h5 className=\"card-title\">{this.state.caption}</h5>\n\n              <div>\n                {this.state.comments.map(comment => (\n                  <div key={comment.id}>\n                    <p className=\"card-text\">{comment.userName + \": \"}{comment.text}</p>\n                    <p></p>\n                  </div>\n                ))}\n              </div>\n\n              <form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"InputComment\"></label>\n                  <input type=\"Comment\" className=\"form-control\" onChange={this.handleAddCommentChange} id=\"commentInput\" aria-describedby=\"CommentHelp\" placeholder=\"Enter Comment\"></input>\n                </div>\n                <Mutation mutation={AddComment} variables={{\"input\": { \"text\":this.state.addCommentText, \"postId\": this.state.postId } }}>\n                  {addComment => <button type=\"submit\" onClick={addComment} className=\"badge badge-pill badge-primary\">Add Comment</button>}\n                </Mutation>\n              </form>\n\n            </div>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n\n\n\n}\n\nexport default PostBox;\n"]},"metadata":{},"sourceType":"module"}