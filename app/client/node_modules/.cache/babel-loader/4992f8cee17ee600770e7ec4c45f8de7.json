{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/anthony/github/MemeShare/app/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anthony/github/MemeShare/app/client/src/queries-mutations/CreateUser.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation createUser($input: CreateUserInput){\\n    User: createUser(input: $input){\\n      errors{\\n        msg\\n      }\\n      id\\n      name\\n      email\\n      password\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nconst CreateUser = gql(_templateObject());\n\nfunction CreateUserErrors() {\n  const _useMutation = useMutation(CreateUser),\n        loading = _useMutation.loading,\n        error = _useMutation.error,\n        data = _useMutation.data;\n\n  if (loading) return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"loading...\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Good: \", data.goodField), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Bad: \", error.graphQLErrors.map(({\n    message\n  }, i) => React.createElement(\"span\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, message))));\n}\n\nexport default CreateUser;","map":{"version":3,"sources":["/home/anthony/github/MemeShare/app/client/src/queries-mutations/CreateUser.js"],"names":["React","Query","Mutation","gql","CreateUser","CreateUserErrors","useMutation","loading","error","data","goodField","graphQLErrors","map","message","i"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAGA,MAAMC,UAAU,GAAGD,GAAH,mBAAhB;;AAcA,SAASE,gBAAT,GAA4B;AAAA,uBACOC,WAAW,CAACF,UAAD,CADlB;AAAA,QAClBG,OADkB,gBAClBA,OADkB;AAAA,QACTC,KADS,gBACTA,KADS;AAAA,QACFC,IADE,gBACFA,IADE;;AAG1B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWE,IAAI,CAACC,SAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAWF,KAAK,CAACG,aAAN,CAAoBC,GAApB,CAAwB,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAcC,CAAd,KACjC;AAAM,IAAA,GAAG,EAAEA,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeD,OAAf,CADS,CAAX,CAFF,CADF;AASD;;AAED,eAAeT,UAAf","sourcesContent":["import React from 'react';\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\n\nconst CreateUser = gql`\n  mutation createUser($input: CreateUserInput){\n    User: createUser(input: $input){\n      errors{\n        msg\n      }\n      id\n      name\n      email\n      password\n    }\n  }\n`;\n\nfunction CreateUserErrors() {\n  const { loading, error, data } = useMutation(CreateUser);\n\n  if (loading) return <span>loading...</span>\n  return (\n    <div>\n      <h2>Good: {data.goodField}</h2>\n      <pre>Bad: {error.graphQLErrors.map(({ message }, i) => (\n        <span key={i}>{message}</span>\n      ))}\n      </pre>\n    </div>\n  );\n}\n\nexport default CreateUser;\n"]},"metadata":{},"sourceType":"module"}